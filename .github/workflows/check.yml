name: check
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  pull_request:
  schedule:
    - cron: "0 8 * * *"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "pypy3.10"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - name: Setup python for tox
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install tox
        run: python -m pip install tox-uv
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          allow-prereleases: true
      - name: Pick environment to run
        run: |
          import os; import platform; import sys; from pathlib import Path
          env = f'TOXENV=py{"" if platform.python_implementation() == "CPython" else "py"}3{sys.version_info.minor}'
          print(f"Picked: {env} for {sys.version} based of {sys.executable}")
          with Path(os.environ["GITHUB_ENV"]).open("ta") as file_handler:
              file_handler.write(env)
        shell: python
      - name: Setup test suite
        run: tox r -vv --notest
      - if: ${{ startsWith(matrix.py, 'pypy') }}
        name: Run test suite
        run: tox r --skip-pkg-install --
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
      - if: ${{ !startsWith(matrix.py, 'pypy')}}
        name: Run test suite
        run: tox r --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
          DIFF_AGAINST: HEAD
      - if: ${{ !startsWith(matrix.py, 'pypy')}}
        name: Rename coverage report file
        run: |
          import os; import sys
          os.rename(f".tox/.coverage.{os.environ['TOXENV']}", f".tox/.coverage.{os.environ['TOXENV']}-{sys.platform}")
        shell: python
      - if: ${{ !startsWith(matrix.py, 'pypy')}}
        name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: .coverage.${{ matrix.os }}.${{ matrix.py }}
          path: ".tox/.coverage.*"
          retention-days: 3

  coverage:
    name: Combine coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install tox
        run: python -m pip install tox-uv build[uv]
      - name: Setup coverage tool
        run: tox -e coverage --notest
      - name: Install package builder
        run: python -m pip install build
      - name: Build package
        run: pyproject-build --wheel .
      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          path: .tox
          pattern: .coverage.*
          merge-multiple: true
      - name: Show contents
        run: ls -alth *
      - name: pwd
        run: pwd
      - name: Combine and report coverage
        run: tox -e coverage
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: .tox/htmlcov

  check:
    name: ${{ matrix.tox_env }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        tox_env:
          - dev
          - type
          - docs
          - readme
        exclude:
          - { os: windows-latest, tox_env: readme }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install tox
        run: python -m pip install tox
      - name: Setup test suite
        run: tox -vv --notest -e ${{ matrix.tox_env }}
      - name: Run test suite
        run: tox --skip-pkg-install -e ${{ matrix.tox_env }}
